version: '3'
services:
  alloy:
    image: grafana/alloy:latest
    profiles: [ "alloy" ]
    restart: on-failure
    volumes:
      - ./.config/alloy:/etc/alloy
    environment:
      REMOTE_WRITE_HOST: mimir:9009
      LOKI_HOST: loki:3100
      TEMPO_HOST: tempo:4317
      PYROSCOPE_HOST: pyroscope:4040
    depends_on:
      - mimir
      - loki
      - tempo
      - pyroscope
    command:
      - run
      - /etc/alloy/config.alloy
      - --storage.path=/var/lib/alloy/data
      - --server.http.listen-addr=0.0.0.0:12345
      - --stability.level=experimental # Enable all functionality
    ports:
      - "12345:12345"
    
  loki:
    image: grafana/loki:latest
    ports:
      - "3100:3100"
    volumes:
      - ./tmp/loki:/loki/
      - ./.config/loki-config.yml:/etc/loki/local-config.yaml:ro
      - ./.config/grafana/dashboards:/var/lib/grafana/dashboards
    command: -config.file=/etc/loki/local-config.yaml

  tempo:
    image: grafana/tempo:latest
    container_name: tempo
    command: [ "-config.file=/etc/tempo.yaml" ]
    environment:
      - MINIO_ACCESS_KEY=TRnYXsLO6bZ5ROWRju99
      - MINIO_SECRET_KEY=mw4D02OzBKE1qkROYcB3NY9INQGuDyld9v29UUY8
    volumes:
      - ./.config/tempo.yaml:/etc/tempo.yaml
      - ./tmp/tempo:/tmp/tempo

  prometheus:
    image: prom/prometheus:v2.44.0
    container_name: prometheus
    ports:
      - "9090:9090"
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.enable-remote-write-receiver'
      - '--enable-feature=exemplar-storage'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    volumes:
      - ./.config/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./tmp/prometheus:/prometheus

  grafana:
    image: grafana/grafana:9.5.2
    container_name: grafana
    environment:
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - ./tmp/grafana/:/var/lib/grafana/
      - ./config/grafana/datasources:/etc/grafana/provisioning/datasources
      - ./.config/ds.yaml:/etc/grafana/provisioning/datasources/ds.yaml
    ports:
      - "3000:3000"
  
  otel-collector:
    image: otel/opentelemetry-collector-contrib:latest
    command: [ "--config=/etc/otel-collector-config.yaml" ]
    volumes:
      - ./.config/collector-config.yaml:/etc/otel-collector-config.yaml
    ports:
      - "4317:4317" # OTLP gRPC receiver
   
  pyroscope:
      image: grafana/pyroscope:latest
      restart: on-failure
      ports:
        - "4040:4040"

  mimir:
    image: grafana/mimir:latest
    container_name: mimir
    ports:
      - "9009:9009" # Mimir's API endpoint
    environment:
      - MINIO_ENABLED=true
      - MINIO_BUCKET_NAME=mimir-bucket
      - MINIO_ENDPOINT=http://minio:9000
      - MINIO_ACCESS_KEY=minioadmin 
      - MINIO_SECRET_KEY=minioadmin
      - MINIO_INSECURE=true
    depends_on:
      - minio
#    command:
#      - -"config.file=/etc/mimir-config/mimir.yaml"
    volumes:
      - ./.config/mimir/mimir.yaml:/etc/mimir-config/mimir.yaml

  minio:
    image: minio/minio:latest
    container_name: minio
    ports:
      - "9000:9000"
      - "9001:9001" # MinIO console
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: server /data --console-address ":9001"
    volumes:
      - ./tmp/minio_data:/data